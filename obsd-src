#!/bin/sh

#set -x
set -e

: "${_src_dir="/usr/src"}"
: "${_tgz_dir="/usr/rel"}"
: "${_src_tgz="src.tar.gz"}"
: "${_sys_tgz="sys.tar.gz"}"
: "${_sha="SHA256"}"
: "${_sha_sig="SHA256.sig"}"
: "${_jobs="$(($(sysctl -n hw.ncpu) - 1))"}"

_rel="${2:-"$(uname -r)"}"
_rel_underscore="$(printf '%s' "$_rel" | sed 's/\./_/')"
_rel_nodot="$(printf '%s' "$_rel" | sed 's/\.//')"

__usage () {
  cat << EOH
Update or initialize ${_src_dir} with OpenBSD's source.

$0 -h|help
$0 init [rel]
$0 deflate [rel]
$0 update [rel]

init [rel] will:
           check for presence of the $_rel src and sys archives in ${_tgz_dir};
           validate them (signify);

deflate [rel] will:
           clean ${_src_dir};
           decompress the $_rel tarballs;

update [rel] will:
           cd to ${_src_dir};
           launch the CVS command to follow -stable (OPENBSD_$_rel_underscore).
       >>  Don't forget to set \$CVSROOT
           $CVSROOT
EOH
}

__status () {
  printf ':: %s\n' "$1"
}

__verify () {
  __status "Verifying $1"
  signify -C -q -p "/etc/signify/openbsd-${_rel_nodot}-base.pub" -x \
   "$_sha_sig" "$1"
}

__dl () {
  __status "Downloading $1 for ${_rel}"
  ftp -o "$1" \
   "https://mirrors.evowise.com/pub/OpenBSD/${_rel}/$1" >/dev/null
}

case "$1" in
  -h|help)
    __usage ; exit 0
  ;;
  init)
    cd "$_tgz_dir"

    : > "${_sha}"
    : > "${_sha_sig}"

    # We download both SHA256 and SHA256.sig to avoid endless loops if we get
    #  a broken SHA256.sig
    for _h in "${_sha}" "${_sha_sig}"; do
      __dl "$_h"
    done

    # Check SHA256 against known signature keys (on current system)
    __status "Checking ${_sha} and ${_sha_sig}"
    signify -V -q -x "${_sha_sig}" \
     -p "/etc/signify/openbsd-${_rel_nodot}-base.pub" -m "${_sha}"

    # We download the archives until signify checks out
    for _tgz in "${_src_tgz}" "${_sys_tgz}"; do
      while ! __verify "$_tgz"; do
        __dl "$_tgz"
      done
    done
  ;;
  deflate)
    cd "$_tgz_dir"
    __verify "$_src_tgz"
    __verify "$_sys_tgz"
    __status "Cleaning up $_src_dir, this might take a while"
    rm -r "${_src_dir:?}"/*
    __status "Deflating $_src_tgz"
    mkdir -p "$_src_dir"
    tar xzf "$_src_tgz" -C "$_src_dir"
    __status "Deflating $_sys_tgz"
    tar xzf "$_sys_tgz" -C "$_src_dir"
  ;;
  update)
    cd "$_src_dir"
    # cvs will fail if there is no CVSROOT specified
    # example: CVSROOT=anoncvs@anoncvs.fr.openbsd.org:/cvs <command>
    # list of CVSROOTs that could work: https://www.openbsd.org/anoncvs.html#CVSROOT
    cvs -q up -rOPENBSD_"${_rel_underscore}" -Pd
  ;;
  build)
    _start="$(date "+%s")"

    __status "Cleaning up /usr/obj, this might take a while"
    rm -rf /usr/obj/*

    __status "Making obj"
    cd "${_src_dir}"
    make obj >/dev/null

    __status "Making distrib-dirs"
    cd "${_src_dir}"/etc
    env DESTDIR=/ make distrib-dirs >/dev/null

    __status "Making build ($_jobs jobs)"
    cd "${_src_dir}"
    make -j"${_jobs}" build >/dev/null

    _stop="$(date "+%s")"
    __status "Build finished: $(date -r $_start) to $(date -r $_stop)"
  ;;
  *)
    __usage >&2 ; exit 5
  ;;
esac


#!/bin/sh
#
# Original Author: Moviuro
# Distributed under the terms of the WTFPL.
#
# You can find a full copy of the license here:
#      http://www.wtfpl.net/txt/copying/
#

set -ex

_target=127.0.0.1
_format="unbound"

__usage () {
  cat << EOF
$0 [-f format] [-o out] [-t target]
$0 -h

Create a lying DNS file for the specified format.
  o -f format: specify an output format.
    Supported formats are:
      - unbound
      - bind
      - hosts (see hosts(5))
      - none  (one hostname per line)
    Default: $_format
  o -o out: specify an output file.
    Default: <stdout>
  o -t target: specify the target
    Default: $_target
EOF
}

while getopts ":t:f:o:h" _opt; do
  case "$_opt" in
    h) __usage; exit 0;;
    t) _target="$OPTARG";;
    f) _format="$OPTARG";;
    o) _output_file="$OPTARG";;
  esac
done

shift "$((OPTIND-1))"

if command -v curl 2>&1 >/dev/null; then
  __download () {
    curl -s "$1"
  }
elif command -v fetch 2>&1 >/dev/null; then
  __download () {
    fetch -q -o - "$1"
  }
else
  printf '%s\n' "Oh no! You don't seem to have curl(1) or fetch(1)" >&2
  printf '%s\n' "I'm cowardly exiting" >&2
  exit 4
fi

# If we're here, we're actually going to do something
_temp_dir="$(mktemp -d -t "$(basename "$0").XXXXXX")"
_temp="$_temp_dir/hosts"
_temp_ack="$_temp_dir/acks"

__cleanup () {
  [ -d "$_temp_dir" ] && rm -fr "$_temp_dir"
}

trap __cleanup SIGINT SIGTERM

__add_hosts () {
  printf '# Original file at %s\n' "$1" >> "$_temp_ack"
  __download "$1" | awk "/^$2 / "'{ print $2 }' >> "$_temp"
}

__add_simple () {
  printf '# Original file at %s\n' "$1" >> "$_temp_ack"
  __download "$1" | { grep -e '^[^\#]' || continue; } >> "$_temp"
}

__to_unix () {
  # We remove weird characters
  tr -d '\r' < "$_temp" |
  # We cast everything to lower-case
  tr '[:upper:]' '[:lower:]' |
  # We ignore lines with spaces
  grep -v ' ' |
  # We sort the file
  sort -u > "$_temp".2
  # We replace the original file
  mv "$_temp".2 "$_temp"
}

__to_output () {
  if [ -z "$_output_file" ]; then
    cat -
  else
    cat - > "$_output_file"
  fi
}

__add_simple "https://ransomwaretracker.abuse.ch/downloads/RW_DOMBL.txt"
__add_simple "https://ransomwaretracker.abuse.ch/downloads/CW_C2_DOMBL.txt"
__add_simple "https://ransomwaretracker.abuse.ch/downloads/CW_PS_DOMBL.txt"
__add_simple "https://ransomwaretracker.abuse.ch/downloads/TC_C2_DOMBL.txt"
__add_simple "https://ransomwaretracker.abuse.ch/downloads/TC_PS_DOMBL.txt"
__add_simple "https://ransomwaretracker.abuse.ch/downloads/LY_C2_DOMBL.txt"
__add_simple "https://ransomwaretracker.abuse.ch/downloads/LY_PS_DOMBL.txt"
__add_simple "https://ransomwaretracker.abuse.ch/downloads/TL_C2_DOMBL.txt"
__add_simple "https://ransomwaretracker.abuse.ch/downloads/TL_PS_DOMBL.txt"
__add_simple "https://s3.amazonaws.com/lists.disconnect.me/simple_ad.txt"
__add_simple "https://s3.amazonaws.com/lists.disconnect.me/simple_tracking.txt"
__add_simple "https://s3.amazonaws.com/lists.disconnect.me/simple_malware.txt"
__add_simple "https://s3.amazonaws.com/lists.disconnect.me/simple_malvertising.txt"

__add_hosts "http://someonewhocares.org/hosts/hosts" '127\.0\.0\.1'
__add_hosts "http://winhelp2002.mvps.org/hosts.txt" '0\.0\.0\.0'
__add_hosts \
  "http://pgl.yoyo.org/adservers/serverlist.php?hostformat=hosts&mimetype=plaintext" \
  '127\.0\.0\.1'
__add_hosts "https://zeustracker.abuse.ch/blocklist.php?download=hostfile" \
  '127\.0\.0\.1'
__add_hosts "https://www.malwaredomainlist.com/hostslist/hosts.txt" \
  '127\.0\.0\.1'

__to_unix

{ cat "$_temp_ack"
  case "$_format" in
  "unbound")
    for _host in $(< "$_temp"); do
      printf 'local-zone: "%s" redirect\n' "$_host"
      printf 'local-data: "%s A %s"\n' "$_host" "$_target"
    done
  ;;
  "none")
    for _host in $(< "$_temp"); do
      printf '%s\n' "$_host"
    done
  ;;
  "bind")
    echo "I do NOT include the headers in $_output_file" >&2
    for _host in $(< "$_temp"); do
      printf '%s. IN A %s\n' "$_host" "$_target"
    done
  ;;
  "hosts")
    for _host in $(< "$_temp"); do
      printf '%s %s\n' "$_target" "$_host"
    done
  ;;
esac } | __to_output

__cleanup

